basePath: /api
definitions:
  models.CreateGame:
    properties:
      description:
        type: string
      image:
        type: string
      name:
        type: string
      platforms:
        items:
          type: integer
        type: array
      status:
        type: string
      tags:
        items:
          type: integer
        type: array
      user_id:
        type: integer
    required:
    - description
    - image
    - name
    - platforms
    - status
    - tags
    - user_id
    type: object
  models.Game:
    properties:
      description:
        type: string
      image:
        type: string
      name:
        type: string
      platforms:
        items:
          $ref: '#/definitions/models.Platforms'
        type: array
      status:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.Tags'
        type: array
      user_id:
        type: integer
    type: object
  models.Platforms:
    properties:
      iconName:
        type: string
      name:
        type: string
    type: object
  models.Tags:
    properties:
      name:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      games:
        items:
          $ref: '#/definitions/models.Game'
        type: array
      isVerified:
        type: boolean
      password:
        type: string
      username:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserSignup:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Game tracker app API
  title: Game tracker API
paths:
  /games:
    delete:
      consumes:
      - application/json
      operationId: delete-game
      parameters:
      - description: Tag
        in: body
        name: platform
        required: true
        schema:
          $ref: '#/definitions/models.Game'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      summary: Delete a game
      tags:
      - games
    get:
      operationId: get-all-games
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Get all Games
      tags:
      - games
    post:
      consumes:
      - application/json
      operationId: create-game
      parameters:
      - description: Tag
        in: body
        name: platform
        required: true
        schema:
          $ref: '#/definitions/models.CreateGame'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateGame'
      summary: Create a game
      tags:
      - games
  /games/{id}:
    put:
      consumes:
      - application/json
      operationId: update-game
      parameters:
      - description: Tag
        in: body
        name: platform
        required: true
        schema:
          $ref: '#/definitions/models.Game'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      summary: Update a game
      tags:
      - games
  /login:
    post:
      consumes:
      - application/json
      operationId: login-account
      parameters:
      - description: Tag
        in: body
        name: platform
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Login into an account
      tags:
      - Authentication
  /platforms:
    get:
      operationId: get-all-platforms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Platforms'
            type: array
      summary: Get all platforms
      tags:
      - platforms
    post:
      consumes:
      - application/json
      operationId: create-platform
      parameters:
      - description: Tag
        in: body
        name: platform
        required: true
        schema:
          $ref: '#/definitions/models.Platforms'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Platforms'
      summary: Create a platform
      tags:
      - platforms
  /platforms/{id}:
    delete:
      operationId: delete-platform
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Platforms'
      summary: Delete a platform
      tags:
      - platforms
  /signup:
    post:
      consumes:
      - application/json
      operationId: create-account
      parameters:
      - description: Tag
        in: body
        name: platform
        required: true
        schema:
          $ref: '#/definitions/models.UserSignup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create an account
      tags:
      - Authentication
  /tags:
    get:
      operationId: get-all-tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tags'
      summary: Get all tags
      tags:
      - tags
    post:
      consumes:
      - application/json
      operationId: create-tag
      parameters:
      - description: Tag
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/models.Tags'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tags'
      summary: Create a tag
      tags:
      - tags
  /tags/{id}:
    delete:
      operationId: delete-tag
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tags'
      summary: Delete a tag
      tags:
      - tags
security:
- Bearer: []
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
